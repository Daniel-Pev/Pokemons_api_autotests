from pydantic import BaseModel, model_validator, field_validator


class TrainerGetModel(BaseModel):
    status: str
    data: list


    @model_validator(mode='before')
    def fields_are_not_empty(self, value):
        if value == "" or value is None:
            raise Exception("Field is empty")
        else:
            return self

    @field_validator('status')
    def check_message(cls, value):
        if value != 'success':
            raise Exception("Message is not correct")
        return value


class TrainerChangeModel(BaseModel):
    message: str
    id: str

    @model_validator(mode='before')
    def fields_are_not_empty(self, value):
        if value == "" or value is None:
            raise Exception("Field is empty")
        else:
            return self

    @field_validator('message')
    def check_message(cls, value):
        if value != 'Информация о тренере обновлена':
            raise Exception("Message is not correct")
        return value
